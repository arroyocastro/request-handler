---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: request-handler-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: config-reader
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-configmaps
  namespace: default
subjects:
- kind: ServiceAccount
  name: request-handler-sa
  namespace: default
roleRef:
  kind: Role
  name: config-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: request-handler
data:
  application.yml: |-
    server:
      port: 8989
    spring:
      application:
        name: request-handler
      cloud:
        gateway:
          default-filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
          routes:
            - id: schema-api
              uri: http://10.66.78.164:32201
              predicates:
                - Path=/schema/**
            - id: party
              uri: http://10.66.78.164:32137
              predicates:
                - Path=/party/**
            - id: product
              uri: http://10.66.78.164:32138
              predicates:
                - Path=/product/**
            - id: common
              uri: http://10.66.78.164:32139
              predicates:
                - Path=/common/**
            - id: orders
              uri: http://10.66.78.164:32140
              predicates:
                - Path=/orders/**
            - id: schema-validate
              uri: http://10.66.78.164:32300
              predicates:
                - Path=/validate/**
            - id: common
              uri: lb://common
              predicates:
                - Path=/common/**
            - id: orders
              uri: lb://orders
              predicates:
                - Path=/orders/**
          globalcors:
            add-to-simple-url-handler-mapping: true
            corsConfigurations:
              "[/**]":
                allowed-origins: "http://10.66.78.164:32202,http://10.66.78.164:3001,http://localhost:3001,http://localhost:3002,http://localhost:32202"
                allowed-methods:
                  - GET
                  - POST
                  - PUT
                  - OPTIONS
                allowed-headers:
                  - "*"
                allow-credentials: true
      security:
        oauth2:
          resourceserver:
            jwt:
              jwk-set-uri: http://10.66.78.164:32269/realms/felivers/protocol/openid-connect/certs
    logging:
      level:
        org.springframework.security: TRACE
        org.springframework.cloud.gateway: TRACE
        com.felips: TRACE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: request-handler
  labels:
    app: request-handler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: request-handler
  template:
    metadata:
      labels:
        app: request-handler
    spec:
      serviceAccountName: request-handler-sa  # Usar el ServiceAccount creado
      containers:
      - name: request-handler
        image: request-handler
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8989
---
apiVersion: v1
kind: Service
metadata:
  name: request-handler
spec:
  type: NodePort
  selector:
    app: request-handler
  ports:
    - port: 8989
      targetPort: 8989
      nodePort: 32200
